<#
/* Copyright 2024 zakuro <z@kuro.red> (https://x.com/zakuro9715)
 * 
 * This file is part of SettingsManager.
 * 
 * SettingsManager is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or (at your option) any later version.
 * 
 * SettingsManager is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * SettingsManager. If not, see <https://www.gnu.org/licenses/>.
 */
 #>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(ManagedPath)/Game.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Game.Settings"  #>
<#@ output extension=".cs" #>
<#
var settings = 
	(
		from prop in typeof(SharedSettings).GetProperties()
		let name = prop.Name
		let type = prop.PropertyType
		where name != "instance" // for singleton
		where name != "userState" // game state
		where name != "editor" // editor state
		where name != "modding" // mod toolthain installation state
		where name != "radio" // not used
		select new{
			Name = name,
			PropName = Char.ToUpper(name[0]) + name.Substring(1),
			TypeName = type.Name,
			AssetName = type.Name.Replace("Settings", " Settings"), // GeneralSettings -> "General Settings"
			FileName = type.Name + ".json",
		}
	).ToDictionary((v) => v.Name);
#>